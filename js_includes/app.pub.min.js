/**
 * Scripting for public (non-Admin) functions. Some legacy coding.
 * As of version 3.0.0, admin functions housed in app.js.
 */

/**
 * ---------------------------------------------------------------------------
 * Legacy Toplines
 * ---------------------------------------------------------------------------
 */

// Escape key to dismiss loader
var KEYCODE_ESC = 27;
$(document).keyup(function (e) {
    if (e.which == KEYCODE_ESC) {
        $('#loader-submit').stop();
    }
});

/**
 * ---------------------------------------------------------------------------
 * Legacy Universal Functions
 * ---------------------------------------------------------------------------
 */

$(function () {
    $('[data-toggle="tooltip"]').tooltip()
});

$(function () {
    $('[data-tooltip="true"]').tooltip()
});

$(function () {
    $('[data-toggle="popover"]').popover()
});

function jumpMenu(targ, selObj, restore) {
    eval(targ + ".location='" + selObj.options[selObj.selectedIndex].value + "'"),
    restore && (selObj.selectedIndex = 0)
}

function checkAvailability() {
    jQuery.ajax({
        url: username_url,
        data: 'user_name=' + $("#user_name").val(),
        type: "POST",
        success: function (data) {
            $("#username-status").html(data)
        },
        error: function () {}
    })
}

function AjaxFunction(t) {
    var e;
    try {
        e = new XMLHttpRequest()
    } catch (t) {
        try {
            e = new ActiveXObject("Msxml2.XMLHTTP")
        } catch (t) {
            try {
                e = new ActiveXObject("Microsoft.XMLHTTP")
            } catch (t) {
                return !1
            }
        }
    }
    var a = email_url;
    a = (a = a + "?email=" + t) + "&sid=" + Math.random(),
    e.onreadystatechange = function () {
        4 == e.readyState && (document.getElementById("msg_email").innerHTML = e.responseText)
    },
    e.open("GET", a, !0),
    e.send(null)
}

function EmailAjaxFunction(email) {
    var httpxml;
    try {
        httpxml = new XMLHttpRequest()
    } catch (e) {
        try {
            httpxml = new ActiveXObject("Msxml2.XMLHTTP")
        } catch (e) {
            try {
                httpxml = new ActiveXObject("Microsoft.XMLHTTP")
            } catch (e) {
                return false
            }
        }
    }
}
    
function stateck() {
    
    if (httpxml.readyState == 4) {
        document.getElementById("msg_email").innerHTML = httpxml.responseText
    }

    if (setup == 1) {
        email_url = email_url + "?section=setup&email=" + email
    } else {
        email_url = email_url + "?email=" + email
    }

    email_url = email_url + "&sid=" + Math.random();
    httpxml.onreadystatechange = stateck;
    httpxml.open("GET", email_url, true);
    httpxml.send(null)
}

function formatTimeDisplay(seconds, display) {
    if (display == "") {
        var disp = 0;
    } else {
        var disp = display
    }
    var numseconds = parseInt((((seconds % 31536000) % 86400) % 3600) % 60, 10);
    if (disp == 0) {
        var numhours = parseInt(Math.floor(((seconds % 31536000) % 86400) / 3600), 10);
        var numminutes = parseInt(Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 10);
        var timer = ((numhours < 10)
            ? "0" + numhours
            : numhours) + ":" + ((numminutes < 10)
            ? "0" + numminutes
            : numminutes) + ":" + ((numseconds < 10)
            ? "0" + numseconds
            : numseconds)
    }
    if (disp == 1) {
        var numminutes = parseInt(Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 10);
        var timer = ((numminutes < 10)
            ? "0" + numminutes
            : numminutes) + ":" + ((numseconds < 10)
            ? "0" + numseconds
            : numseconds)
    }
    if (disp == 2) {
        var timer = ((numseconds < 10)
            ? "0" + numseconds
            : numseconds)
    }
    return timer
}

/**
 * ---------------------------------------------------------------------------
 * V3 Universal Functions
 * ---------------------------------------------------------------------------
 */

// This function is duplicated in the app.js file
// Move to a shared file
function fetchRecordCount(base_url,element,is_class,db_table,p1,c1,p2,c2,p3,c3) {

    // db_table is the name of the database table
    // p vars are column names, c vars are their associated conditions
    // Used in conjunction in WHERE statements
    // Example: 
    // -- If db_table var is "brewing", the p1 var is "brewBrewerID", and the c1 var is "3"
    // -- The php code will execute SELECT COUNT(*) as 'count' FROM brewing WHERE brewBrewerID = '3';

    if (is_class == 1) {
        prefix = ".";
    }
    else {
        prefix = "#";
    }

    element = prefix + element;
    element_updated = element + "-updated";

    // Build AJAX URL
    ajax_url = base_url + "ajax/count_records.ajax.php?section=" + db_table;
    if ((typeof p1 !== 'undefined') && (typeof c1 !== 'undefined')) ajax_url = ajax_url + "&p1=" + p1 + "&c1=" + c1;
    if ((typeof p2 !== 'undefined') && (typeof c2 !== 'undefined')) ajax_url = ajax_url + "&p2=" + p2 + "&c2=" + c2;
    if ((typeof p3 !== 'undefined') && (typeof c3 !== 'undefined')) ajax_url = ajax_url + "&p3=" + p3 + "&c3=" + c3;

    console.log(ajax_url);
    
    $.ajax({
        
        url: ajax_url,
        type: 'GET',
        dataType: 'json',
        
        success: function(response) {
            if (response.success) {
                $(element).html(response.count);
                $(element_updated).html(response.updated);
            } else {
                $(element).text('Error');
                $(element_updated).text('Failed to fetch data: ' + response.message);
            }
        },
        
        error: function(xhr, status, error) {
            $(element).text('Error');
            $(element_updated).text('Connection failed: ' + error);
        }
    
    });
    
}

/**
 * ------------------------------
 * V3: Reveal Elements
 * Works in conjunction with
 * reveal-element and active-element
 * CSS
 * ------------------------------
 */

function reveal() {
    var reveals = document.querySelectorAll(".reveal-element");
    for (var i = 0; i < reveals.length; i++) {
        var windowHeight = window.innerHeight;
        var elementTop = reveals[i].getBoundingClientRect().top;
        var elementVisible = 225;

        if (elementTop < windowHeight - elementVisible) {
            reveals[i].classList.add("active-element");
        } else {
            reveals[i].classList.remove("active-element");
        }
    }
}

window.addEventListener("scroll", reveal, {passive: true});

/**
 * ------------------------------
 * V3: Bootstrap Form Validation
 * ------------------------------
 */

(() => {

  'use strict'

  // Fetch all the forms we want to apply custom Bootstrap validation styles to
  const forms = document.querySelectorAll('.needs-validation');

  // Loop over them and prevent submission
  Array.from(forms).forEach(form => {
    form.addEventListener('submit', event => {
      
      if (!form.checkValidity()) {
        document.getElementById('loader-submit').style.display = 'none';
        event.preventDefault();
        event.stopPropagation();
        $("#form-submit-button-disabled-msg-required").modal('show');        
      }

      else {
        document.getElementById('loader-submit').style.display = 'block';
      }

      form.classList.add('was-validated');
    }, false);

  });

})();

/**
 * ------------------------------
 * V3: Forgot Password
 * ------------------------------
 */

function change_email_ajax_results() {
    if (Array.isArray(ajax_result) && ajax_result.length) {
        // array exists and is not empty
        var change_email_arr = JSON.parse(ajax_result);
        if (change_email_arr.user_name_found == 0) {
            $("#change-email-avail-status").show();
            $("#change-email-submit").prop("disabled",false);
            $("#change-email-avail-status").html(email_not_in_use);
        }
        else if (change_email_arr.user_name_found == 2) {
            $("#change-email-avail-status").show();
            $("#change-email-submit").prop("disabled",true);
            $("#change-email-sure").prop("checked",false);
            $("#change-email-avail-status").html(email_not_valid);
        }
        else {
            $("#change-email-avail-status").show();
            $("#change-email-submit").prop("disabled",true);
            $("#change-email-sure").prop("checked",false);
            $("#change-email-avail-status").html(email_in_use);
        }
    }
}

function check_user_name_avail(base_url,element_id,status_id,type) {
    
    var element_id = "#"+element_id;
    var status_id = "#"+status_id;
    var append = "";

    if (type == "forgot_password") var append = "&go=forgot";
    if (type == "change_email") var append = "&go=change";

    jQuery.ajax({
        url: base_url+"ajax/account_checks.ajax.php?action=username"+append,
        data: "user_name="+$(element_id).val(),
        type: "POST",
        
        success:function(data){

            if (type == "change_email") {
                ajax_result.length = 0;

                // Return JSON data
                ajax_result.push(data);
                change_email_ajax_results();
            }

            else {
                $(status_id).html(data);
                $("#forgot-user-name-check-button").hide();
            }
            
        },

        error:function(){
 
        }

    });
}

function check_security_question_answer(base_url,element_id,status_id) {
   
    var element_id = "#"+element_id;
    var status_id = "#"+status_id;

    jQuery.ajax({
        url: base_url+"ajax/account_checks.ajax.php?action=check_answer",
        data: "user_question_answer="+$(element_id).val(),
        type: "POST",
        
        success:function(data){
            $(status_id).html(data);
        },

        error:function(){

        }

    });
}

function check_valid_email(base_url,element_id,status_id) {
    
    var element_id = "#"+element_id;
    var status_id = "#"+status_id;

    jQuery.ajax({
        url: base_url+"ajax/account_checks.ajax.php?action=email",
        data: "email="+$(element_id).val(),
        type: "POST",
        
        success:function(data){
            $(status_id).html(data);
        },

        error:function(){

        }

    });
}

function clear_all_form_fields(form_id) {
    var form_id = "#"+form_id;
    $(form_id)[0].reset();
}

function clear_form_field(field_id) {
    var field_id = "#"+field_id;
    $(field_id).val('');
    $(field_id).val([]);
}

function forgot_password_hide_elements() {
    $("#forgot-user-name-check-button").prop("disabled",true);
    $("#forgot-password-security-question-button").prop("disabled",true);
    $("#forgot-user-name-status").empty().hide();
    $("#forgot-user-name-email-status").empty().hide();
    $("#forgot-user-name-clear-button").hide();
    $("#forgot-user-name-check-button").hide();
    $("#security-question-response-status").empty().hide();
}

function forgot_password_clear_all() {
    forgot_password_hide_elements();
    clear_form_field('forgot-password-security-question');
    clear_form_field('forgot-user-name');
}

/**
 * ------------------------------
 * V3: Password Match
 * ------------------------------
 */

function checkFieldsMatch() {
    var password = $("#password-entry").val();
    var confirmPassword = $("#password-confirm").val();
    var passwordsMatch = false;

    // Check passwords
    if (password.length > 0 && confirmPassword.length > 0) {
        if(password === confirmPassword) {
            passwordsMatch = true;
            $("#password-error").hide();
        } else {
            $("#password-error").show();
        }
    } else {
        $("#password-error").hide();
    }
    
    // Enable submit button if passwords match
    if (passwordsMatch) {
        $("#submit-button").prop("disabled", false);
    } else {
        $("#submit-button").prop("disabled", true);
    }

}

/**
 * ------------------------------
 * V3: Alerts - Auto Dismiss
 * ------------------------------
 */

// Stacked Alerts - 15 seconds
setTimeout(function() {
  
  $('.alert-stacked')
  .css('opacity', 1)
  .slideUp('fast')
  .animate({ opacity: 0 },{ queue: false, duration: 'fast' })
  .removeClass('show')
  ;
  
}, 15000);

// Single Alert - 10 seconds
setTimeout(function() {

  $('#alert-auto-dismiss').fadeOut('fast');
  $('#alert-auto-dismiss').removeClass('show');
  
}, 10000);

// -----------------------------------------------------------------------------

$(document).ready(function () {

    /**
     * ------------------------------
     * Legacy: Various
     * ------------------------------
     */

    $(".no-spam").bind("cut copy paste", function(e) {
      e.preventDefault();
    });

    $(".no-spam").bind("contextmenu", function(e) {
      e.preventDefault();
    });

    $("#submitBtn").click(function () {
        $("#archiveName").html($("#archiveSuffix").val());
    });
    
    $("#submit").click(function () {
        $("#formfield").submit();
    });
    
    $("#admin-arrow").click(function () {
        $(this)
            .find("i")
            .toggleClass("fa-chevron-circle-left fa-chevron-circle-right");
        $(this)
            .find("i")
            .toggleClass("text-teal text-orange");
    });
    
    $(".my-dropdown").dropdown();
    $(".my-dropdown").tooltip();
    
    /**
     * ------------------------------
     * Legacy: Loader
     * ------------------------------
     */

    $("a:not([href*='#'],[target='_blank'])").click(function () {
        
        if (!$(this).hasClass("hide-loader")) {
            $('#loader-submit').show(0).delay(30000).hide(0);
        }

        else {
            $('#loader-submit').hide();
        }

    });

    $("a[target='_blank']").click(function () {
        
        if ($(this).hasClass("hide-loader")) {
            $('#loader-submit').hide();
        }

    });

    $(".hide-loader").click(function() {
        $('#loader-submit').hide();
    });

    $(".modal-window-link").click(function() {
        $('#loader-submit').hide();
    });

    /**
     * ------------------------------
     * Legacy: Loader on form submit
     * ------------------------------
     */

    $("form").submit(function () {
        
        if (!$(this).hasClass("hide-loader-form-submit")) {
            $('#loader-submit').show(0).delay(30000).hide(0);
        }

        else {
            $('#loader-submit').hide();
        }

    });

    $("#form-submit-button-disabled-msg-required").hide();

    $("#form-submit-button").click(function () {
        if ($(this).is(":disabled") || $(this).hasClass("disabled")) {
            $("#submit-form").removeClass("hide-loader-form-submit");
            $("#submit-form").addClass("hide-loader-form-submit");
            $("#form-submit-button-disabled-msg-required").fadeIn();
        } else {
            $("#submit-form").removeClass("hide-loader-form-submit");
            $("#form-submit-button-disabled-msg-required").fadeOut();
        }
    });

    /**
     * ------------------------------
     * Legacy: Fancybox Configuration
     * https://www.cpcards.co.uk/assets/fancybox3/docs/
     * ------------------------------
     */
    
    $(".modal-window-link").fancybox({
        toolbar: false,
        smallBtn: true,
        buttons: [
            "close"
        ],
        iframe : {
            attr: {
                scrolling: "auto"
            },
            preload: true
        }       
    });
    
    $('[data-fancybox="gallery"]').fancybox({
      buttons: [
        "slideShow",
        "thumbs",
        "zoom",
        "fullScreen",
        "share",
        "close"
      ],
      loop: true,
      protect: true
    });

    /**
     * ------------------------------
     * V3: Confirmation Modal
     * ------------------------------
     */

    $('a[data-confirm]').click(function(ev) {
        ev.preventDefault();
        if (!$('#dataConfirmModal').length) {
            $('body').append(
                '<div class="modal fade" id="dataConfirmModal" tabindex="-1" aria-hidden="true">'+
                    '<div class="modal-dialog modal-lg">'+
                        '<div class="modal-content">'+
                            '<div class="modal-header">'+
                                '<h4 class="modal-title"></h4>'+
                                '<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>'+
                            '</div>'+
                            '<div class="modal-body"></div>'+
                            '<div class="modal-footer">'+
                                '<button type="button" class="btn btn-danger" data-bs-dismiss="modal" id="dataConfirmCancel"></button>'+
                                '<a class="btn btn-primary" id="dataConfirmOK"></a>'+
                            '</div>'+
                        '</div>'+
                    '</div>'+
                '</div>'
            );
        } 
        $('#dataConfirmModal').find('.modal-body').text($(this).attr('data-confirm'));
        $('#dataConfirmModal').find('.modal-title').text($(this).attr('data-confirm-title'));
        $('#dataConfirmCancel').text($(this).attr('data-confirm-cancel'));
        $('#dataConfirmOK').attr('href', $(this).attr('href'));
        $('#dataConfirmOK').text($(this).attr('data-confirm-proceed'));
        $('#dataConfirmModal').modal('show');
        return false;
    });

    /**
     * ------------------------------
     * V3: Forgot Password
     * ------------------------------
     */

    $("#forgot-user-name-check-button").prop("disabled",true);
    $("#forgot-user-name-clear-button").hide();
    $("#forgot-user-name-check-button").hide();
    $("#forgot-user-name-status").hide();
    $("#forgot-user-name-email-status").hide();
    $("#security-question-response-status").hide();

    $("#forgot-user-name").keyup(function(e) {
        if ($("#forgot-user-name").val() != "") {
            $("#forgot-user-name-check-button").prop("disabled",false);
            $("#forgot-user-name-status").show();
            $("#forgot-user-name-email-status").show();
            $("#forgot-user-name-clear-button").show("fast");
            $("#forgot-user-name-check-button").show("fast");
            if (e.which == 13) {
                check_user_name_avail(base_url,'forgot-user-name','forgot-user-name-status','forgot_password');
            }
        }
        if ($("#forgot-user-name").val() == "") {
            forgot_password_hide_elements();
        }
    });

    $("#forgot-user-name-status").keyup(function(e) {
        if ($("#security-question-answer").val() != "") {
            $("#forgot-user-name-check-button").prop("disabled",true);
            $("#forgot-password-security-question-button").prop("disabled",false);
            $("#security-question-response-status").show();
            //
            if (e.which == 13) {
                check_security_question_answer(base_url,'security-question-answer','security-question-response-status')
            }
        }
        if ($("#security-question-answer").val() == "") {
            $("#forgot-user-name-check-button").prop("disabled",false);
            $("#forgot-password-security-question-button").prop("disabled",true);
            $("#security-question-response-status").empty().hide();
        }
    });

    /**
     * ------------------------------
     * V3: Password Match
     * ------------------------------
     */

    // Bind the function to multiple events on both password fields
    $(".password-field").on("keyup change input paste focus blur", checkFieldsMatch);

    // Use MutationObserver to detect changes to input values (for autofill detection)
    var observerConfig = { attributes: true, childList: true, subtree: true, characterData: true };
    
    // Create a MutationObserver instance for each field
    $(".password-field").each(function() {
        var observer = new MutationObserver(function(mutations) {
            checkFieldsMatch();
        });
        
        // Start observing the input element
        observer.observe(this, observerConfig);
    });
    
    // Check for autofill using animation frame technique
    (function detectAutofill() {
        // Check if values have changed
        checkFieldsMatch();
        
        // Schedule next check
        requestAnimationFrame(detectAutofill);
    })();

    /**
     * ------------------------------
     * V3: Password Strength
     * Dependencies: zxcvbn.js, pwstrength-bootstrap.min.js
     * ------------------------------
     */

    "use strict";
    var options = {};
    options.ui = {
        container: "#pwd-container",
        showErrors: true,
        useVerdictCssClass: true,
        showVerdictsInsideProgressBar: true,
        viewports: {
            progress: ".pwd-strength-viewport-progress"
        },
        progressBarExtraCssClasses: "progress-bar-striped active",
        progressBarEmptyPercentage: 2,
        progressBarMinPercentage: 6
    };
    options.common = {
        zxcvbn: true,
        minChar: 8,
        onKeyUp: function (evt, data) {
            $("#length-help-text").text(label_length + ": " + $(evt.target).val().length + " | " + label_score + ": " + data.score.toFixed(2));
        },
    };
    
    $('#password-entry').pwstrength(options);

}); // End Document Ready