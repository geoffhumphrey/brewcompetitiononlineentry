/**
 * ------------------------------------------
 * Admin Ajax Functions
 * ------------------------------------------
 */

$("#alert-update-button-enabled").hide();
function generic_success(element_id, remove, msg) {
    $("#" + element_id + "-status").removeClass();
    $("#" + element_id + "-status").attr("class", "fa fa-lg fa-check text-success");
    $("#" + element_id + "-status-msg").html(msg);
    $("#" + element_id + "-status-msg").attr("class", "text-success small");
    if (remove == 0) {
        $("#" + element_id + "-status").show();
        $("#" + element_id + "-status-msg").show()
    }
    if (remove > 0) {
        $("#" + element_id + "-status")
            .show()
            .delay(remove)
            .hide(100);
        $("#" + element_id + "-status-msg")
            .show()
            .delay(remove)
            .hide(100)
    }
}

function generic_failure(element_id, remove, msg) {
    $("#" + element_id + "-status").removeClass();
    $("#" + element_id + "-status").attr("class", "fa fa-lg fa-times text-danger");
    $("#" + element_id + "-status-msg").html(msg);
    $("#" + element_id + "-status-msg").attr("class", "text-danger small");
    if (remove == 0) {
        $("#" + element_id + "-status").show();
        $("#" + element_id + "-status-msg").show()
    }
    if (remove > 0) {
        $("#" + element_id + "-status")
            .show()
            .delay(remove)
            .hide(100);
        $("#" + element_id + "-status-msg")
            .show()
            .delay(remove)
            .hide(100)
    }
}

function generic_session_expired(element_id, remove, msg) {
    $("#" + element_id + "-status").removeClass();
    $("#" + element_id + "-status").attr("class", "fa fa-lg fa-exclamation-triangle text-danger");
    $("#" + element_id + "-status-msg").html(msg);
    $("#" + element_id + "-status-msg").attr("class", "text-danger small");
    if (remove == 0) {
        $("#" + element_id + "-status").show();
        $("#" + element_id + "-status-msg").show()
    }
    if (remove > 0) {
        $("#" + element_id + "-status")
            .show()
            .delay(remove)
            .hide(100);
        $("#" + element_id + "-status-msg")
            .show()
            .delay(remove)
            .hide(100)
    }
}

function disable_update_button(action) {
    $("#" + action + "-update-button-disabled").show();
    $("#" + action + "-update-button-enabled").hide();
    $("#" + action + "-submit").prop("disabled", true);
    $("#alert-update-button-enabled").hide()
}

function enable_update_button(action) {
    $("#" + action + "-submit").prop("disabled", false);
    $("#" + action + "-update-button-disabled").hide();
    $("#" + action + "-update-button-enabled").show();
    $("#alert-update-button-enabled").show()
}

function save_failure(element_id, column, action, error) {
    enable_update_button(action);
    if (error == 1) {
        $("#" + element_id + "-" + column + "-status-msg").html("Error. Invalid numerical input.")
    } else if (error == 2) {
        $("#" + element_id + "-" + column + "-status-msg").html("Error. Alpha characters only.")
    } else if (error == 3) {
        $("#" + element_id + "-" + column + "-status-msg").html("Error saving. Please try again.")
    } else {
        $("#" + element_id + "-" + column + "-status-msg").html("Error")
    }
    $("#" + element_id + "-" + column + "-status").removeClass();
    $("#" + element_id + "-" + column + "-status").removeClass("fa-cog");
    $("#" + element_id + "-" + column + "-status").removeClass("fa-spin");
    $("#" + element_id + "-" + column + "-status").attr("class", "fa fa-lg fa-times text-danger me-1");
    $("#" + element_id + "-" + column + "-status-msg").attr("class", "text-danger small");
    $("#" + element_id + "-" + column + "-form-group").removeClass("has-error");
    $("#" + element_id + "-" + column + "-form-group").removeClass("has-success");
    $("#" + element_id + "-" + column + "-form-group").addClass("has-error");
    $("#" + element_id + "-" + column + "-status").show();
    $("#" + element_id + "-" + column + "-status-msg").show()
}

function save_success(element_id, column, action, error) {
    disable_update_button(action);
    $("#" + element_id + "-" + column + "-status").removeClass();
    $("#" + element_id + "-" + column + "-status").removeClass("fa-cog");
    $("#" + element_id + "-" + column + "-status").removeClass("fa-spin");
    $("#" + element_id + "-" + column + "-status").attr("class", "fa fa-lg fa-check text-success me-1");
    $("#" + element_id + "-" + column + "-status-msg").html("Saved");
    $("#" + element_id + "-" + column + "-status-msg").attr("class", "text-success small");
    $("#" + element_id + "-" + column + "-form-group").removeClass("has-error");
    $("#" + element_id + "-" + column + "-form-group").removeClass("has-success");
    $("#" + element_id + "-" + column + "-form-group").addClass("has-success");
    $("#" + element_id + "-" + column + "-status").show();
    $("#" + element_id + "-" + column + "-status-msg").show()
}

function save_success_update_value(element_id, column, value) {
    $("#" + element_id + "-" + column + "-sortable-value").html(value)
}

function save_column(base_url, column, action, id, rid1, rid2, rid3, rid4, element_id, output = "value") {
    var value = $("#" + element_id).val();
    $("#" + element_id + "-" + column + "-status").removeClass();
    $("#" + element_id + "-" + column + "-status").removeClass("fa-cog");
    $("#" + element_id + "-" + column + "-status").removeClass("fa-spin");
    $("#" + element_id + "-" + column + "-status").attr("class", "fa fa-lg fa-cog fa-spin text-muted me-1");
    $("#" + element_id + "-" + column + "-status-msg").html("Processing...");
    $("#" + element_id + "-" + column + "-status-msg").attr("class", "text-muted small");
    $("#" + element_id + "-" + column + "-status").show();
    $("#" + element_id + "-" + column + "-status-msg").show();
    let url = base_url + "ajax/save.ajax.php?action=" + action + "&go=" + column + "&id=" + id;
    if (rid1 != "default") {
        url += "&rid1=" + rid1
    }
    if (rid2 != "default") {
        url += "&rid2=" + rid2
    }
    if (rid3 != "default") {
        url += "&rid3=" + rid3
    }
    if (rid4 != "default") {
        url += "&rid4=" + rid4
    }
    var data_const = column + "=" + value;
    jQuery.ajax({
        url: url,
        data: data_const,
        type: "POST",
        success: function (data) {
            var jsonData = JSON.parse(data);
            if (jsonData.status === "0") {
                save_failure(element_id, column, action, jsonData.error_type)
            }
            if (jsonData.status === "1") {
                if (output == "html") {
                    $("#" + element_id).html(jsonData.input)
                } else {
                    $("#" + element_id).val(jsonData.input)
                }
                save_success(element_id, column, action, jsonData.error_type);
                save_success_update_value(element_id, column, jsonData.input)
            }
            if (jsonData.status === "9") {
                generic_session_expired(element_id, '0', 'Session expired. Sign in and try again.')
            }
        },
        error: function () {
            save_failure(element_id, column, action, "99")
        }
    })
}

function select_place(base_url, column, action, id, rid1, rid2, rid3, rid4, element_id) {
    if (($('select option[value="' + $('#' + element_id).val() + '"]:selected').length > 1) && $('select option[value="' + $('#' + element_id).val() + '"]:selected') !== "") {
        if ($('#' + element_id).val() !== "") {
            $('#' + element_id)
                .val('-1')
                .change();
            $('#noDupeModal').modal('show')
        }
    } else {
        save_column(base_url, column, action, id, rid1, rid2, rid3, rid4, element_id)
    }
    if ($('#' + element_id).val() === "") {
        save_column(base_url, column, action, id, rid1, rid2, rid3, rid4, element_id)
    }
}

function select_place_multi(base_url, column, action, id, rid1, rid2, rid3, rid4, element_id) {
    var user_value = $('#' + element_id).val();
    var select_class = rid1;
    var selected_values = [];
    $('.' + select_class).each(function () {
        var x = this.value;
        if (typeof x !== 'undefined') {
            if (this.id != element_id) {
                selected_values.push(x)
            }
        }
    });
    $('.' + select_class).each(function () {
        x = this.value;
        if (typeof x !== 'undefined') {
            if (($.inArray(x, selected_values) > -1) && (x != "")) {
                if (x == user_value) {
                    $('#noDupeModal').modal('show');
                    $('#' + element_id)
                        .val('-1')
                        .change()
                }
            } else {
                save_column(base_url, column, action, id, rid1, rid2, rid3, rid4, element_id)
            }
        }
    })
}

function regenerate_judging_numbers(base_url, action, source, element_id) {
    $("#" + element_id + "-status").removeClass();
    $("#" + element_id + "-status").attr("class", "fa fa-lg fa-cog fa-spin text-muted");
    $("#" + element_id + "-status-msg").html("Processing...");
    $("#" + element_id + "-status-msg").attr("class", "text-muted small");
    $("#" + element_id + "-status").show();
    $("#" + element_id + "-status-msg").show();
    var url = base_url + "ajax/regenerate.ajax.php?action=" + action;
    jQuery.ajax({
        url: url,
        success: function (data) {
            var jsonData = JSON.parse(data);
            if (jsonData.status === "0") {
                if (source == "admin-dashboard") {
                    generic_failure(element_id, '8000', 'There was an error, please try again.')
                }
            }
            if (jsonData.status === "1") {
                if (source == "admin-dashboard") {
                    generic_success(element_id, '8000', 'Regenerated successfully.')
                }
            }
            if (jsonData.status === "9") {
                if (source == "admin-dashboard") {
                    generic_session_expired(element_id, '0', 'Session expired. Sign in and try again.')
                }
            }
        },
        error: function () {}
    })
}

function purge_data(base_url, action, go, source, element_id) {
    $("#" + element_id + "-status").removeClass();
    $("#" + element_id + "-status").attr("class", "fa fa-lg fa-cog fa-spin text-muted");
    $("#" + element_id + "-status-msg").html("Processing...");
    $("#" + element_id + "-status-msg").attr("class", "text-muted small");
    $("#" + element_id + "-status").show();
    $("#" + element_id + "-status-msg").show();
    if (action == "") {
        action = "purge"
    } else {
        action = action
    }
    let url = base_url + "ajax/purge.ajax.php?action=" + action + "&go=" + go;
    let data_const = "";
    if ((go == "entries") || (go == "payments") || (go == "participants")) {
        var value = $("#" + element_id + "-" + go + "-value").val();
        data_const += value;
        url += "&view=" + value
    }
    if ((go == "judge-assignments") || (go == "steward-assignments")) {
        url += "&view=" + element_id
    }
    jQuery.ajax({
        url: url,
        data: data_const,
        type: "POST",
        success: function (data) {
            var jsonData = JSON.parse(data);
            if (jsonData.status === "0") {
                if (source == "admin-dashboard") {
                    generic_failure(element_id, '8000', 'There was an error, please try again.')
                }
            }
            if (jsonData.status === "1") {
                var message = "";
                if ((jsonData.date !== "") || (jsonData.date.length > 1)) {
                    message = "Data prior to " + jsonData.date + " purged successfully."
                } else if (go == "confirmed") {
                    message = "All entries confirmed."
                } else if (go == "cleanup") {
                    message = "Data cleaned successfully."
                } else {
                    message = "Purge completed successfully."
                }
                if (source == "table-admin") {
                    $("#" + element_id + "-count").html("0");
                    $("#" + element_id + "-icon").removeClass("fa fa-lg fa-edit");
                    $("#" + element_id + "-icon").removeClass("fa fa-lg fa-plus-circle");
                    $("#" + element_id + "-icon").addClass("fa fa-lg fa-plus-circle");
                    generic_success(element_id, '8000', 'Deleted')
                }
                if (source == "admin-dashboard") {
                    if ((go == "participants") || (go == "purge-all")) {
                        var dom_ct_participants_calc = $("#admin-dashboard-participant-count").text() - jsonData.dom_ct_participants;
                        $("#admin-dashboard-participant-count").html(dom_ct_participants_calc);
                        $("#admin-dashboard-avail-judges-count").html(jsonData.dom_ct_judges_avail);
                        $("#admin-dashboard-assigned-judges-count").html(jsonData.dom_ct_judges_assigned);
                        $("#admin-dashboard-avail-stewards-count").html(jsonData.dom_ct_stewards_avail);
                        $("#admin-dashboard-assigned-stewards-count").html(jsonData.dom_ct_stewards_assigned);
                        $("#admin-dashboard-avail-staff-count").html(jsonData.dom_ct_staff_avail);
                        $("#admin-dashboard-assigned-staff-count").html(jsonData.dom_ct_staff_assigned)
                    }
                    if ((go == "participants") || (go == "entries") || (go == "purge-all")) {
                        $("#admin-dashboard-participant-entries").html(jsonData.dom_ct_participants_entries);
                        $("#admin-dashboard-entries-count").html(jsonData.dom_ct_entries);
                        $("#admin-dashboard-entries-unconfirmed-count").html(jsonData.dom_ct_entries_unconfirmed);
                        $("#admin-dashboard-entries-paid-count").html(jsonData.dom_ct_entries_paid);
                        $("#admin-dashboard-entries-paid-received-count").html(jsonData.dom_ct_entries_paid_received);
                        $("#admin-dashboard-total-fees").html(jsonData.dom_total_fees);
                        $("#admin-dashboard-total-fees-paid").html(jsonData.dom_total_fees_paid)
                    }
                    if (go == "evaluation") {
                        $("#admin-dashboard-evaluation-count").html(jsonData.dom_ct_eval);
                        $("#admin-dashboard-evaluation-count-total").html(jsonData.dom_ct_eval)
                    }
                    if (go == "unpaid") {
                        $("#admin-dashboard-participant-entries").html(jsonData.dom_ct_participants_entries);
                        $("#admin-dashboard-entries-count").html(jsonData.dom_ct_entries);
                        $("#admin-dashboard-entries-unconfirmed-count").html(jsonData.dom_ct_entries_unconfirmed);
                        $("#admin-dashboard-entries-paid-count").html(jsonData.dom_ct_entries_paid);
                        $("#admin-dashboard-entries-paid-received-count").html(jsonData.dom_ct_entries_paid_received);
                        $("#admin-dashboard-total-fees").html(jsonData.dom_total_fees);
                        $("#admin-dashboard-total-fees-paid").html(jsonData.dom_total_fees_paid)
                    }
                    generic_success(element_id, '8000', message)
                }
            }
            if (jsonData.status === "2") {
                if ((jsonData.date !== "") || (jsonData.date.length > 1)) {
                    message = "No records updated prior to " + jsonData.date + " were found."
                } else {
                    message = "No non-admin participants found."
                }
                if (source == "admin-dashboard") {
                    generic_failure(element_id, '8000', message)
                }
            }
            if (jsonData.status === "9") {
                if (source == "admin-dashboard") {
                    generic_session_expired(element_id, '0', 'Session expired. Sign in and try again.')
                }
            }
        },
        error: function () {}
    })
}

function import_scores(base_url, ajax_url, section) {
    $("#score-entered-status-default").show();
    $("#score-import-status").hide();
    jQuery.ajax({
        url: ajax_url + "import_scores.ajax.php",
        success: function (data) {
            var jsonData = JSON.parse(data);
            if (jsonData.status === "0") {
                $("#import-scores-status").html("No evaluations have been recorded yet.");
                $("#import-scores-status-div").attr("class", "alert alert-purple");
                $("#import-scores-status-icon").attr("class", "fa fa-asterisk fa-xs text-purple");
                $("#import-scores-status").attr("class", "text-purple small")
            } else if (jsonData.status === "1") {
                var imported_count = jsonData.scores_imported_count;
                var not_imported_count = jsonData.scores_not_imported_count;
                var flagged_count = jsonData.flagged_count;
                var scored_places_discrepency_count = jsonData.scored_places_discrepency_count;
                var scored_places_discrepency = jsonData.scored_places_discrepency;
                let import_status = "";
                if ((section == "evaluation") || (go == "judging_scores")) {
                    import_status += "<h4>Import Summary</h4>"
                }
                if (imported_count == 1) {
                    import_status += "<p>Scores and/or places for <strong class=\"text-success\">" + imported_count + " entry</strong> have been imported and/or its place awarded has been updated and" +
                            " is now officially accepted.</strong></p>"
                }
                if (imported_count > 1) {
                    import_status += "<p>Scores and/or places for <strong class=\"text-success\">" + imported_count + " entries</strong> have been imported and/or their places awarded have been updat" +
                            "ed and are now officially accepted.</strong></p>"
                }
                if (not_imported_count == 1) {
                    if ((section == "evaluation") || (go == "judging_scores")) {
                        import_status += "<p>"
                    }
                    if (section == "evaluation") {
                        import_status += "Scores and/or places for <strong class=\"text-danger\">" + not_imported_count + " entries</strong> were <strong>not imported</strong> because, at this time, only" +
                                " a single judge evaluation exists in the database for each of those entries.</st" +
                                "rong>";
                        import_status += " Check the notes column for each table below to see the number of evaluations su" +
                                "bmitted per entry."
                    } else {
                        import_status += "The score for <strong class=\"text-danger\">" + not_imported_count + " entry</strong> was <strong>not imported</strong> imported because, at this time" +
                                ", <a href=\"" + base_url + "/index.php?section=admin&amp;go=evaluation&amp;filter=default&amp;view=admin\"" +
                                ">only a single judge evaluation exists in the database</a> for that entry.</stro" +
                                "ng></p>"
                    }
                    if ((section == "evaluation") || (go == "judging_scores")) {
                        import_status += "</p>"
                    }
                }
                if (not_imported_count > 1) {
                    if ((section == "evaluation") || (go == "judging_scores")) {
                        import_status += "<p>"
                    }
                    if (section == "evaluation") {
                        import_status += "Scores and/or places for <strong class=\"text-danger\">" + not_imported_count + " entries</strong> were <strong>not imported</strong> because, at this time, only" +
                                " a single judge evaluation exists in the database for each of those entries.</st" +
                                "rong>";
                        import_status += " Check the notes column for each table below to see the number of evaluations su" +
                                "bmitted per entry."
                    } else {
                        import_status += "Scores and/or places for <strong class=\"text-danger\">" + not_imported_count + " entries</strong> were <strong>not imported</strong> because, at this time, <a h" +
                                "ref=\"" + base_url + "/index.php?section=admin&amp;go=evaluation&amp;filter=default&amp;view=admin\"" +
                                ">only a single judge evaluation exists in the database</a> for each of those ent" +
                                "ries.</strong>"
                    }
                    if ((section == "evaluation") || (go == "judging_scores")) {
                        import_status += "</p>"
                    }
                }
                if ((flagged_count > 0) || (imported_count > 0)) {
                    if ((section == "evaluation") || (go == "judging_scores")) {
                        import_status += "<p>"
                    }
                    if (imported_count > 0) {
                        if (go == "judging_scores") {
                            import_status += "<a href=\"" + base_url + "index.php?section=admin&amp;go=judging_scores\">Refresh</a> to view all imported" +
                                    " scores and places."
                        } else {
                            import_status += "<a href=\"" + base_url + "index.php?section=admin&amp;go=judging_scores\">View all imported scores and pla" +
                                    "ces</a>."
                        }
                    }
                    if (flagged_count > 0) {
                        if (flagged_count == 1) {
                            import_status += " <strong>Please note: <span class=\"text-danger\">" + flagged_count + " entry</span></strong> with consensus scores entered by judges that <strong>did " +
                                    "not match</strong> was not imported."
                        }
                        if (flagged_count > 1) {
                            import_status += " <strong>Please note: <span class=\"text-danger\">" + flagged_count + " entries</span></strong> with consensus scores entered by judges that <strong>di" +
                                    "d not match</strong> were not imported. Please check the entries, reconcile the " +
                                    "differences, and re-import."
                        }
                        if (section == "evaluation") {
                            import_status += " Refresh this page to see the flagged entries."
                        }
                    }
                    if ((section == "evaluation") || (go == "judging_scores")) {
                        import_status += "</p>"
                    }
                }
                let import_status_discrepency = "";
                if ((scored_places_discrepency) && (scored_places_discrepency_count > 0)) {
                    scored_places_discrepency = scored_places_discrepency.split(",");
                    if ((section == "evaluation") || (go == "judging_scores")) {
                        import_status_discrepency += "<p>"
                    }
                    if (scored_places_discrepency_count == 1) {
                        import_status_discrepency += " <strong class=\"text-danger\">" + scored_places_discrepency_count + " entry's</strong> chosen medal place  <strong>did not match</strong> what was al" +
                                "ready in the scores database and <strong>was not imported</strong>."
                    }
                    if (scored_places_discrepency_count > 1) {
                        import_status_discrepency += " <strong class=\"text-danger\">" + scored_places_discrepency_count + " entries'</strong> chosen medal places <strong>did not match</strong> what was a" +
                                "lready in the scores database and <strong>were not imported</strong>."
                    }
                    if (section == "evaluation") {
                        import_status_discrepency += " Check the entries detailed in the table below for accuracy."
                    }
                    if ((section == "evaluation") || (go == "judging_scores")) {
                        import_status_discrepency += "</p>"
                    }
                    import_status_discrepency += "<div style=\"margin-top: 15px;\" id=\"discrepency-table\" class=\"row\">";
                    import_status_discrepency += "<div class=\"col col-xs-12 col-sm-12 col-md-12 col-lg-8\">";
                    import_status_discrepency += "<table style=\"background-color: #ededed;\" class=\"table table-bordered table-s" +
                            "triped table-hover\">";
                    import_status_discrepency += "<thead>";
                    import_status_discrepency += "<tr>";
                    import_status_discrepency += "<th width=\"33%\">Number</th>";
                    if ((section == "admin") && (go == "judging_scores")) {
                        import_status_discrepency += "<th width=\"33%\">Place - Admin: Scores</th>"
                    } else {
                        import_status_discrepency += "<th width=\"33%\">Place - <a href=\"" + base_url + "index.php?section=admin&amp;go=judging_scores\">Admin: Scores</a></th>"
                    }
                    if (section == "evaluation") {
                        import_status_discrepency += "<th>Place - Admin: Entry Evaluations</th>"
                    } else {
                        import_status_discrepency += "<th>Place - <a href=\"" + base_url + "index.php?section=admin&amp;go=evaluation&amp;filter=default&amp;view=admin\">" +
                                "Admin: Entry Evaluations</a></th>"
                    }
                    import_status_discrepency += "</tr>";
                    import_status_discrepency += "</thead>";
                    import_status_discrepency += "<tbody>";
                    scored_places_discrepency.forEach((discrepency, index) => {
                        discrepency = discrepency.replace("|", "</td><td>");
                        discrepency = discrepency.replace("|", "</td><td>");
                        discrepency = discrepency.replace("<td>5</td>", "<td>HM</td>");
                        import_status_discrepency += "<tr>";
                        import_status_discrepency += "<td>" + discrepency + "</td>";
                        import_status_discrepency += "</tr>"
                    });
                    import_status_discrepency += "</tbody>";
                    import_status_discrepency += "</table>";
                    import_status_discrepency += "</div>"
                }
                if ((imported_count > 0) || (scored_places_discrepency_count > 0)) {
                    if (imported_count == 0) {
                        var imported_status = "";
                        $("#import-scores-status-div").hide();
                        $("#import-scores-status-dashboard").hide()
                    } else {
                        $("#import-scores-status-dashboard").show();
                        $("#import-scores-status-div").attr("class", "alert alert-forest-green");
                        $("#import-scores-status-icon").attr("class", "fa fa-check-circle text-forest-green");
                        $("#import-scores-status").html("Successfully imported " + imported_count + " scores and/or places.");
                        $("#import-scores-status").attr("class", "text-forest-green small")
                    }
                    if (scored_places_discrepency_count > 0) {
                        import_status += import_status_discrepency;
                        $("#import-status-discrepency-dashboard").show();
                        $("#import-status-discrepency-icon").attr("class", "fa fa-info-circle text-primary");
                        $("#import-status-discrepency").html(import_status);
                        $("#import-status-discrepency").attr("class", "text-primary small");
                        if ((section == "admin") && (go == "default")) {
                            $("#discrepency-table").hide()
                        }
                    }
                    $("#score-entered-status-default").hide();
                    $("#score-import-status").html(import_status);
                    $("#score-import-status").show("fast")
                } else {
                    $("#score-import-status").hide();
                    $("#import-scores-status").html("There are no updates to make and/or no scores/places to import that meet the min" +
                            "imum criteria (at least two evaluations recorded).");
                    $("#import-scores-status-div").attr("class", "alert alert-purple");
                    $("#import-scores-status-icon").attr("class", "fa fa-asterisk text-purple");
                    $("#import-scores-status").attr("class", "text-purple small")
                }
                $("#no-scores-entered").hide();
                $("#import-scores").removeAttr('href')
            } else if (jsonData.status === "2") {
                $("#score-import-status").hide();
                $("#import-scores-status").html("There was a problem. Please try again.");
                $("#import-scores-status-div").attr("class", "alert alert-warning");
                $("#import-scores-status-icon").attr("class", "fa fa-exclamation-circle text-warning");
                $("#import-scores-status").attr("class", "text-warning small")
            } else {
                $("#score-import-status").hide();
                $("#import-scores-status").html("There was an error.");
                $("#import-scores-status-div").attr("class", "alert alert-danger");
                $("#import-scores-status-icon").attr("class", "fa fa-times-circle text-danger");
                $("#import-scores-status").attr("class", "text-danger small")
            }
        },
        error: function () {
            console.log('Error')
        }
    })
}

$(document).ready(function () {
    $("#score-import-status").hide();
    $("#import-scores-status-div").hide();
    $("#import-scores").click(function () {
        $("#score-import-status").hide();
        $("#import-scores-status-div").show();
        $("#import-scores-status").html("Loading...");
        $("#import-scores-status-div").attr("class", "alert alert-grey");
        $("#import-scores-status-icon").attr("class", "fa fa-cog fa-spin text-grey");
        $("#import-scores-status").attr("class", "text-grey small");
        import_scores(base_url, ajax_url, section)
    });
}); // End document.ready(function ()